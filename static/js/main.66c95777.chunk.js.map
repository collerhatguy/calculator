{"version":3,"sources":["components/Input.js","components/AdvancedButtons.js","components/ButtonList.js","components/Display.js","hooks/useVerify.js","hooks/useToggle.js","App.js","index.js"],"names":["Input","props","input","setDisplay","className","parseInt","onClick","AdvancedButtons","advanced","map","prevDisplay","ButtonList","allClear","findAnswer","style","gridTemplateColumns","index","key","Display","error","display","answer","ghostAnswer","id","useVerify","useState","errorMessage","setErrorMessage","validity","setValidity","setGhostAnswer","useEffect","checkLength","checkEnd","checkStart","checkParentheses","checkOrder","evaluate","parenthesesCount","i","length","charAt","lastCharacter","includes","firstCharacter","invalidNextToEachOther","useToggle","initialState","state","setState","App","setAnswer","toggleAdvanced","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAGe,SAASA,EAAMC,GAAQ,IAC1BC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WACTC,EAAYC,SAASH,IAAU,GAAK,SAAW,aACrD,OACI,4BACIE,UAAWA,EACXE,QAASH,GACXD,GCPK,SAASK,EAAgBN,GAAQ,IACrCE,EAAyBF,EAAzBE,WAEP,OAFgCF,EAAbO,SAIf,yBAAKJ,UAAU,oBAHI,CAAC,OAAQ,OAAQ,OAAO,IAAK,QAI5BK,KAAI,SAAAP,GAAK,OACrB,kBAACF,EAAD,CACIE,MAAOA,EACPC,WAAY,kBAAMA,GAAW,SAAAO,GAAW,OAAIA,EAAcR,YANpD,KCDX,SAASS,EAAWV,GAAQ,IAC/BE,EAA+CF,EAA/CE,WAAYS,EAAmCX,EAAnCW,SAAUC,EAAyBZ,EAAzBY,WAAYL,EAAaP,EAAbO,SAE1C,OACI,yBACIM,MAAON,EAAW,GAAK,CAACO,oBAAqB,OAC7CX,UAAU,eACN,kBAACG,EAAD,CACIJ,WAAYA,EACZK,SAAUA,IAElB,yBAAKJ,UAAU,kBACX,4BACIA,UAAU,KACVE,QAASM,GAFb,MAVG,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAclFH,KAAI,SAACP,EAAOc,GAAR,OACR,kBAAChB,EAAD,CACIE,MAAOA,EACPC,WAAY,kBAAMA,GAAW,SAAAO,GAAW,OAAIA,EAAcR,MAC1De,IAAKD,OAGb,4BACIZ,UAAU,SACVE,QAASO,GAFb,OC1BD,SAASK,EAAT,GAAyD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,YACrD,OACI,yBAAKC,GAAG,oBACJ,4BACI,6BACKJ,GAEL,6BACKC,EADL,MAGA,yBAAKG,GAAG,gBACHD,GAEL,6BACKD,KCZN,SAASG,EAAUtB,GAAQ,IAAD,EACGuB,mBAAS,IADZ,mBAC9BC,EAD8B,KAChBC,EADgB,OAELF,oBAAS,GAFJ,mBAE9BG,EAF8B,KAEpBC,EAFoB,OAGCJ,mBAAS,IAHV,mBAG9BH,EAH8B,KAGjBQ,EAHiB,KAoBrC,OAJAC,qBAAU,WAZU,IAACV,EACZW,EADYX,EAaLnB,EAZayB,EAAiBE,IACrCI,EAASZ,EAAQM,EAAiBE,IAClCK,EAAWb,EAAQM,EAAiBE,IACpCM,EAAiBd,EAAQM,EAAiBE,IAC1CO,EAAWf,EAAQM,EAAiBE,KAEzCF,EAAgB,IAChBE,GAAY,GACZC,EAAeO,YAASnC,OAKzB,CAACA,IAEG,CAAC0B,EAAUF,EAAcJ,EAAaQ,GAGjD,IAAMK,EAAmB,SAACd,EAAQM,EAAiBE,GAE/C,IADA,IAAIS,EAAmB,EACdC,EAAI,EAAGA,EAAIlB,EAAOmB,OAAQD,IAI/B,GAHyB,MAArBlB,EAAOoB,OAAOF,IAAYD,IACL,MAArBjB,EAAOoB,OAAOF,IAAYD,IAE1BA,EAAmB,EAGnB,OAFAX,EAAgB,uBAChBE,GAAY,IACL,EAIf,OAA2B,IAArBS,IACFX,EAAgB,uBAChBE,GAAY,IACL,IAITI,EAAW,SAACZ,EAAQM,EAAiBE,GACvC,IACMa,EAAgBrB,EAAOoB,OAAOpB,EAAOmB,OAAS,GACpD,OAFyB,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEpCG,SAASD,KAC1Bf,EAAgB,yCAChBE,GAAY,IACL,IAITK,EAAa,SAACb,EAAQM,EAAiBE,GACzC,IACMe,EAAiBvB,EAAOoB,OAAO,GACrC,OAF2B,CAAE,IAAK,IAAK,IAAK,IAAK,KAE1BE,SAASC,KAC5BjB,EAAgB,2CAChBE,GAAY,IACL,IAITG,EAAc,SAACX,EAAQM,EAAiBE,GAC1C,OAAsB,IAAlBR,EAAOmB,SACPb,EAAgB,6BAChBE,GAAY,IACL,IAITO,EAAa,SAACf,EAAQM,EAAiBE,GAEzC,IADA,IAAMgB,EAAyB,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3CN,EAAI,EAAGA,EAAIlB,EAAOmB,OAAQD,IAC/B,GAAKlB,EAAOoB,OAAOF,EAAE,GAArB,CACA,GAAIM,EAAuBF,SAAStB,EAAOoB,OAAOF,EAAE,KAAOM,EAAuBF,SAAStB,EAAOoB,OAAOF,IAGrG,OAFAZ,EAAgB,wCAChBE,GAAY,IACL,EAEX,GAA2B,MAAvBR,EAAOoB,OAAOF,EAAE,IAAmC,MAArBlB,EAAOoB,OAAOF,GAG5C,OAFAZ,EAAgB,wCAChBE,GAAY,IACL,EAGf,OAAO,GChFIiB,EARG,SAAAC,GAAiB,IAAD,EACJtB,mBAASsB,GADL,mBACvBC,EADuB,KAChBC,EADgB,KAK9B,MAAO,CAACD,EAFO,kBAAMC,GAAUD,M,MCyCpBE,MAtCf,WAAgB,IAAD,EACiBzB,mBAAS,IAD1B,mBACNL,EADM,KACGjB,EADH,OAEesB,mBAAS,IAFxB,mBAENJ,EAFM,KAEE8B,EAFF,OAGsBL,GAAU,GAHhC,mBAGNtC,EAHM,KAGI4C,EAHJ,OAIiD5B,EAAUJ,GAJ3D,mBAINQ,EAJM,KAIIF,EAJJ,KAIkBJ,EAJlB,KAI+BQ,EAJ/B,KAgBb,OACE,6BAAS1B,UAAU,OACjB,kBAACc,EAAD,CACEC,MAAOO,EACPN,QAASA,EACTC,OAAQA,EACRC,YAAaA,IAEf,kBAACX,EAAD,CACER,WAAYA,EACZS,SAdW,WACfuC,EAAU,IACVhD,EAAW,KAaPU,WArBa,WACZe,IACLuB,EAAUd,YAASjB,IACnBU,EAAe,IACf3B,EAAWkD,KAAKC,UAAUjB,YAASjB,OAkB/BZ,SAAUA,IAEZ,4BACEJ,UAAU,kBACVE,QAAS8C,GAFX,cClCNG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.66c95777.chunk.js","sourcesContent":["\nimport React from 'react'\n\nexport default function Input(props) {\n    const { input, setDisplay } = props\n    const className = parseInt(input) <= 10 ? \"number\" : \"non-number\"\n    return (\n        <button \n            className={className} \n            onClick={setDisplay}\n        >{input}</button>\n    )\n}\n","import React from 'react'\nimport Input from \"./Input\"\n\nexport default function AdvancedButtons(props) {\n   const { setDisplay, advanced } = props\n    const advancedInputs = [\"cos(\", \"sin(\", \"tan(\",\"e\", \"log(\"]\n    if (!advanced) return null\n    return (\n        <div className=\"buttons-advanced\">\n            {advancedInputs.map(input => \n                <Input \n                    input={input} \n                    setDisplay={() => setDisplay(prevDisplay => prevDisplay + input)} \n                />\n            )}\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport Input from \"./Input\"; \nimport AdvancedButtons from \"./AdvancedButtons\";\n\nexport default function ButtonList(props) {\n    const { setDisplay, allClear, findAnswer, advanced } = props\n    const inputs = [ \"*\", \"^\", \".\", \"1\", \"2\", \"3\", \"+\", \"4\", \"5\", \"6\", \"-\", \"7\", \"8\", \"9\", \"/\", \"(\", \"0\", \")\",];\n    return (\n        <div\n            style={advanced ? {} : {gridTemplateColumns: \"1fr\"}} \n            className=\"all-buttons\">\n                <AdvancedButtons \n                    setDisplay={setDisplay} \n                    advanced={advanced}\n                />\n            <div className=\"normal-buttons\">\n                <button \n                    className=\"ac\" \n                    onClick={allClear}\n                >ac</button>\n                {inputs.map((input, index) => \n                    <Input \n                        input={input} \n                        setDisplay={() => setDisplay(prevDisplay => prevDisplay + input)}\n                        key={index}\n                    />\n                )}\n                <button \n                    className=\"equals\" \n                    onClick={findAnswer}\n                >=</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Display({error, display, answer, ghostAnswer}) {\n    return (\n        <div id=\"displayContainer\">\n            <h2>\n                <div>\n                    {error}\n                </div>\n                <div>\n                    {display} =\n                </div>\n                <div id=\"ghost-answer\">\n                    {ghostAnswer}\n                </div>\n                <div>\n                    {answer}\n                </div>\n            </h2>\n      </div>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { evaluate } from \"mathjs\";\n\n\nexport default function useVerify(input) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [validity, setValidity] = useState(true);\n    const [ghostAnswer, setGhostAnswer] = useState(\"\");\n    const verifyInput = (answer) => {\n        if (!checkLength(answer, setErrorMessage, setValidity)) return; \n        if (!checkEnd(answer, setErrorMessage, setValidity)) return; \n        if (!checkStart(answer, setErrorMessage, setValidity)) return; \n        if (!checkParentheses(answer, setErrorMessage, setValidity)) return; \n        if (!checkOrder(answer, setErrorMessage, setValidity)) return;\n\n        setErrorMessage(\"\");\n        setValidity(true);\n        setGhostAnswer(evaluate(input))\n        return;\n    }\n    useEffect(() => {\n        verifyInput(input)\n    }, [input])\n    \n    return [validity, errorMessage, ghostAnswer, setGhostAnswer];\n}\n\nconst checkParentheses = (answer, setErrorMessage, setValidity) => {\n    var parenthesesCount = 0;\n    for (var i = 0; i < answer.length; i++) {\n        if (answer.charAt(i) === \"(\") parenthesesCount++;\n        if (answer.charAt(i) === \")\") parenthesesCount--;\n        // if our count ever dips below zero then a closing parentheses is out of order\n        if (parenthesesCount < 0) {\n            setErrorMessage(\"Invalid parentheses\")\n            setValidity(false)\n            return false;\n        }\n    }\n    // if out count doest return to zero than the parentheses are unequel\n    if (!(parenthesesCount === 0)) {\n        setErrorMessage(\"Invalid parentheses\")\n        setValidity(false)\n        return false;\n    }\n    return true;\n}\nconst checkEnd = (answer, setErrorMessage, setValidity) => {\n    const invalidEndInputs = [ \"*\", \"+\", \"^\", \".\", \"-\", \"/\", \"(\"]\n    const lastCharacter = answer.charAt(answer.length - 1);\n    if (invalidEndInputs.includes(lastCharacter)) {\n        setErrorMessage(\"You cannot end a calculation that way\");\n        setValidity(false);\n        return false;\n    } \n    return true\n}\nconst checkStart = (answer, setErrorMessage, setValidity) => {\n    const invalidStartInputs = [ \"*\", \"+\", \"^\", \"/\", \")\"]\n    const firstCharacter = answer.charAt(0);\n    if (invalidStartInputs.includes(firstCharacter)) {\n        setErrorMessage(\"You cannot start a calculation that way\");\n        setValidity(false);\n        return false;\n    } \n    return true\n}\nconst checkLength = (answer, setErrorMessage, setValidity) => {\n    if (answer.length === 0) {\n        setErrorMessage(\"Cannont calculate nothing\")\n        setValidity(false)\n        return false;\n    }\n    return true;\n}\nconst checkOrder = (answer, setErrorMessage, setValidity) => {\n    const invalidNextToEachOther = [\"*\", \"+\", \"^\", \"/\", \"-\"]\n    for (var i = 0; i < answer.length; i++) {\n        if (!answer.charAt(i-1)) continue;\n        if (invalidNextToEachOther.includes(answer.charAt(i-1)) && invalidNextToEachOther.includes(answer.charAt(i))) {\n            setErrorMessage(\"Those two cant be next to each other\")\n            setValidity(false)\n            return false;\n        }\n        if (answer.charAt(i-1) === \"e\" && answer.charAt(i) === \"e\") {\n            setErrorMessage(\"Those two cant be next to each other\")\n            setValidity(false)\n            return false;\n        }\n    }\n    return true;\n}","import { useState } from \"react\"\n\nconst useToggle = initialState => {\n    const [state, setState] = useState(initialState)\n\n    const toggle = () => setState(!state)\n\n    return [state, toggle]\n}\n\nexport default useToggle","import React, { useState } from \"react\"\nimport { evaluate } from \"mathjs\"\nimport ButtonList from \"./components/ButtonList\"\nimport Display from \"./components/Display\"\nimport useVerify from \"./hooks/useVerify\"\nimport useToggle from \"./hooks/useToggle\"\nimport \"./styles/App.css\"\n\nfunction App() {\n  const [display, setDisplay] = useState(\"\")\n  const [answer, setAnswer] = useState(\"\")\n  const [advanced, toggleAdvanced] = useToggle(false)\n  const [validity, errorMessage, ghostAnswer, setGhostAnswer] = useVerify(display)\n  \n  const findAnswer = () => {\n    if (!validity) return\n    setAnswer(evaluate(display))\n    setGhostAnswer(\"\")\n    setDisplay(JSON.stringify(evaluate(display)))\n  }\n  const allClear = () => {\n    setAnswer(\"\")\n    setDisplay(\"\")\n  }\n  return (\n    <section className=\"app\">\n      <Display \n        error={errorMessage} \n        display={display} \n        answer={answer} \n        ghostAnswer={ghostAnswer}\n      />\n      <ButtonList \n        setDisplay={setDisplay} \n        allClear={allClear} \n        findAnswer={findAnswer} \n        advanced={advanced}\n      />\n      <button \n        className=\"advanced-button\" \n        onClick={toggleAdvanced}\n      >Advanced</button>\n    </section>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}