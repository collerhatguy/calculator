{"version":3,"sources":["components/Input.js","components/AdvancedButtons.js","components/ButtonList.js","components/Display.js","hooks/useVerify.js","App.js","index.js"],"names":["Input","input","setDisplay","className","parseInt","console","log","onClick","AdvancedButtons","advanced","map","prevDisplay","ButtonList","allClear","findAnswer","index","key","Display","error","display","answer","ghostAnswer","id","useVerify","useState","errorMessage","setErrorMessage","validity","setValidity","setGhostAnswer","useEffect","checkLength","checkEnd","checkStart","checkParentheses","checkOrder","evaluate","parenthesesCount","i","length","charAt","lastCharacter","includes","firstCharacter","invalidNextToEachOther","App","setAnswer","setAdvanced","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7fe21b3.chunk.js","sourcesContent":["\nimport React from 'react'\n\nexport default function Input({input, setDisplay}) {\n    var className = \"\";\n    parseInt(input) <= 10 ? className = \"number\" : className = \"non-number\";\n    console.log(parseInt(input))\n    return (\n        <button className={className} onClick={() => setDisplay()}>\n            {input}\n        </button>\n    )\n}\n","import React from 'react';\nimport Input from \"./Input\";\n\nexport default function AdvancedButtons({setDisplay, advanced}) {\n   \n    // would like to add ln and square root\n    // \"âˆš\" not accepted\n    const advancedInputs = [\"cos(\", \"sin(\", \"tan(\",\"e\", \"log(\"]\n    return (\n        <div className={advanced ? \"buttons-advanced\" : \"hidden\"}>\n            {advancedInputs.map(input => {\n                return <Input input={input} setDisplay={() => setDisplay(prevDisplay => prevDisplay + input)} />\n            })}\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport Input from \"./Input\"; \nimport AdvancedButtons from \"./AdvancedButtons\";\n\nexport default function ButtonList({setDisplay, allClear, findAnswer, advanced}) {\n    const inputs = [ \"*\", \"^\", \".\", \"1\", \"2\", \"3\", \"+\", \"4\", \"5\", \"6\", \"-\", \"7\", \"8\", \"9\", \"/\", \"(\", \"0\", \")\",];\n    return (\n        <div className=\"all-buttons\">\n            <AdvancedButtons setDisplay={setDisplay} advanced={advanced}/>\n            <div className=\"normal-buttons\">\n                <button className=\"ac\" onClick={() => allClear()}>ac</button>\n                {inputs.map((input, index) => {\n                    return <Input \n                                input={input} \n                                setDisplay={() => setDisplay(prevDisplay => prevDisplay + input)} \n                                key={index}\n                            />\n                })}\n                <button className=\"equals\" onClick={() => findAnswer()}>=</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Display({error, display, answer, ghostAnswer}) {\n    return (\n        <div id=\"displayContainer\">\n            <h2>\n                <div>\n                    {error}\n                </div>\n                <div>\n                    {display} =\n                </div>\n                <div id=\"ghost-answer\">\n                    {ghostAnswer}\n                </div>\n                <div>\n                    {answer}\n                </div>\n            </h2>\n      </div>\n    )\n}\n","// this is where i would like to build a hook that takes the diplay veriable and returns\n// 1. a varible that says whether its valid\n// 2. an error message\n// 3. a function that rechecks whether the diplay is valid\nimport {useState, useEffect} from \"react\"\nimport { evaluate } from \"mathjs\";\n\n\n\nexport default function useVerify(input) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [validity, setValidity] = useState(true);\n    const [ghostAnswer, setGhostAnswer] = useState(\"\");\n    // for stopping invalid inputs\n    const verifyInput = (answer) => {\n\n        if (!checkLength(answer, setErrorMessage, setValidity)) return; \n        if (!checkEnd(answer, setErrorMessage, setValidity)) return; \n        if (!checkStart(answer, setErrorMessage, setValidity)) return; \n        if (!checkParentheses(answer, setErrorMessage, setValidity)) return; \n        if (!checkOrder(answer, setErrorMessage, setValidity)) return; \n        // if there are no errors than continue \n        setErrorMessage(\"\");\n        setValidity(true);\n        setGhostAnswer(evaluate(input))\n        return;\n    }\n    useEffect(() => {\n        verifyInput(input)\n    }, [input])\n    return [validity, errorMessage, ghostAnswer, setGhostAnswer];\n}\n\nconst checkParentheses = (answer, setErrorMessage, setValidity) => {\n    var parenthesesCount = 0;\n    for (var i = 0; i < answer.length; i++) {\n        if (answer.charAt(i) === \"(\") parenthesesCount++;\n        if (answer.charAt(i) === \")\") parenthesesCount--;\n        // if our count ever dips below zero then a closing parentheses is out of order\n        if (parenthesesCount < 0) {\n            setErrorMessage(\"Invalid parentheses\")\n            setValidity(false)\n            return false;\n        }\n    }\n    // if out count doest return to zero than the parentheses are unequel\n    if (!(parenthesesCount === 0)) {\n        setErrorMessage(\"Invalid parentheses\")\n        setValidity(false)\n        return false;\n    }\n    return true;\n}\nconst checkEnd = (answer, setErrorMessage, setValidity) => {\n    const invalidEndInputs = [ \"*\", \"+\", \"^\", \".\", \"-\", \"/\", \"(\"]\n    const lastCharacter = answer.charAt(answer.length - 1);\n    if (invalidEndInputs.includes(lastCharacter)) {\n        setErrorMessage(\"You cannot end a calculation that way\");\n        setValidity(false);\n        return false;\n    } \n    return true\n}\nconst checkStart = (answer, setErrorMessage, setValidity) => {\n    const invalidStartInputs = [ \"*\", \"+\", \"^\", \"/\", \")\"]\n    const firstCharacter = answer.charAt(0);\n    if (invalidStartInputs.includes(firstCharacter)) {\n        setErrorMessage(\"You cannot start a calculation that way\");\n        setValidity(false);\n        return false;\n    } \n    return true\n}\nconst checkLength = (answer, setErrorMessage, setValidity) => {\n    if (answer.length === 0) {\n        setErrorMessage(\"Cannont calculate nothing\")\n        setValidity(false)\n        return false;\n    }\n    return true;\n}\nconst checkOrder = (answer, setErrorMessage, setValidity) => {\n    const invalidNextToEachOther = [\"*\", \"+\", \"^\", \"/\", \"-\"]\n    for (var i = 0; i < answer.length; i++) {\n        if (!answer.charAt(i-1)) continue;\n        if (invalidNextToEachOther.includes(answer.charAt(i-1)) && invalidNextToEachOther.includes(answer.charAt(i))) {\n            setErrorMessage(\"Those two cant be next to each other\")\n            setValidity(false)\n            return false;\n        }\n    }\n    return true;\n}","import React, { useState } from \"react\";\nimport { evaluate } from \"mathjs\";\nimport ButtonList from \"./components/ButtonList\";\nimport Display from \"./components/Display\";\nimport useVerify from \"./hooks/useVerify\";\nimport \"./styles/App.css\"\n\nfunction App() {\n  const [display, setDisplay] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [advanced, setAdvanced] = useState(false);\n  const [validity, errorMessage, ghostAnswer, setGhostAnswer] = useVerify(display);\n  const findAnswer = () => {\n    // if we get an error message return\n    if (!validity) return;\n    setAnswer(evaluate(display))\n    setGhostAnswer(\"\")\n    setDisplay(JSON.stringify(evaluate(display)))\n  }\n  const allClear = () => {\n    setAnswer(\"\")\n    setDisplay(\"\")\n  }\n  return (\n    <div className=\"app\">\n      <Display error={errorMessage} display={display} answer={answer} ghostAnswer={ghostAnswer} />\n      <ButtonList setDisplay={setDisplay} allClear={allClear} findAnswer={findAnswer} advanced={advanced}/>\n      <button className=\"advanced-button\" onClick={() => setAdvanced(!advanced)}>Advanced</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}